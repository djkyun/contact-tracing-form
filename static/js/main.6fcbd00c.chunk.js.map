{"version":3,"sources":["CitizenItemRecord.js","CitizenRecords.js","App.js","index.js"],"names":["CitizenItemRecord","populationList","venueList","lastname","firstname","middlename","address","email","contact","filter","id","venue","map","vlist","description","date_fill","time_fill","CitizenRecords","pop_list","App","useState","PopulationList","setPopulationList","useRef","ext","contact_number","venueName","useEffect","localStorage","setItem","JSON","stringify","class","type","ref","placeholder","max-length","value","vList","onClick","fn","current","mn","ln","nameExt","add","datefill","timefill","email_add","contact_no","prevList","Math","random","extension","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6fcbd00c.chunk.js","sourcesContent":["import React, {useState} from 'react'\n\nexport default function CitizenItemRecord({populationList, venueList}) {\n    \n \n     \n    return (\n        \n           \n\n            <>\n           <h3> \n               \n               {populationList.lastname},  {populationList.firstname} {populationList.middlename}           \n                <br/>\n                <small>\n                    Address: {populationList.address}<br/>\n                    Email Address: {populationList.email}<br/>\n                    Contact Number: {populationList.contact}<br/>\n\n                    Venue: \n\n                    {\n                         venueList.filter(venueList => venueList.id == populationList.venue).map(vlist => {\n                         \n                            return <li>{vlist.description}</li>                  \n                            \n                           \n                        })    \n                    }\n                  \n                    Date and Time: {populationList.date_fill} | {populationList.time_fill}\n                </small>\n            </h3>\n            </>\n       \n    )\n}\n","import React from 'react';\nimport CitizenItemRecord from './CitizenItemRecord';\n\nexport default function CitizenRecords({populationList, venueList}) {\n    return (\n       populationList.map(pop_list =>{\n            return <CitizenItemRecord venueList = {venueList} key = {pop_list.id} populationList = {pop_list}/>\n       })\n    )\n}\n","import React, {useState,useRef,useEffect} from 'react';\nimport './App.css';\nimport CitizenRecords from './CitizenRecords';\n\n\nfunction App() {\n\n  const [PopulationList, setPopulationList] = useState([])\n  const [PopulationSearchList, setPopulationSearchList] = useState([])\n\n  const [venueList, setVenueList] = useState([{id:1,description:\"mini bus\"},{id:2,description:\"jeepney\"},{id:3,description:\"tricycle\"}])\n\n  const firstname = useRef()\n  const middlename = useRef()\n  const lastname = useRef()\n  const ext = useRef()\n  const address = useRef()\n  const date_fill = useRef()\n  const time_fill = useRef()\n  const email = useRef()\n  const contact_number = useRef()\n\n  const venueName = useRef()\n\n  const LOCAL_STORAGE_KEY = \"contact-tracing-form-haptic-bgc-shenzhen-branch\";\n\n  useEffect(() => {\n\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(PopulationList));\n\n  },[...PopulationList])\n\n\n  function save_contact_tracing()\n  {\n\n    const fn          = firstname.current.value\n    const mn          = middlename.current.value\n    const ln          = lastname.current.value\n    const nameExt     = ext.current.value\n    const venue       = venueName.current.value\n    const add         = address.current.value\n\n    const datefill    = date_fill.current.value\n    const timefill    = time_fill.current.value\n\n    const email_add   = email.current.value\n    const contact_no  = contact_number.current.value\n\n    setPopulationList(prevList => {\n      return [...PopulationList,{\n        \n        id:Math.random(1000),\n        address:add,\n        date_fill:datefill,\n        time_fill:timefill,\n\n        firstname:fn,\n        middlename:mn,\n        lastname:ln,\n        extension:nameExt,\n\n        email:email_add,\n        contact:contact_no,\n        \n        venue:venue\n      \n      }]\n    },[PopulationList])\n\n\n    firstname.current.value = null\n    middlename.current.value = null\n    lastname.current.value = null\n    ext.current.value = null\n    venueName.current.value = \"-- Select Venue --\"\n    address.current.value = null\n \n\n  }\n\n\n\n\n\n  return (\n\n   \n\n    <>\n    <div class = \"form-card-1\">\n\n    <h2>Contact Tracing Form</h2>\n\n     <input type = \"date\" class = \"text-form-1\" ref = {date_fill}/>\n     <input type = \"time\" class = \"text-form-1\" ref = {time_fill}/><br/>\n\n    <input type = \"text\" class = \"text-form-1\" placeholder = \"First Name\" ref = {firstname}/>\n    <input type = \"text\" class = \"text-form-1\" placeholder = \"Middle Name\" ref = {middlename}/>\n    <input type = \"text\" class = \"text-form-1\" placeholder = \"Last Name\" ref = {lastname}/>\n    <input type = \"text\" class = \"text-form-1\" placeholder = \"Name Extension (e.g. Jr, Sr, III, IV, V ...)\" ref = {ext}/>\n    <input type = \"text\" class = \"text-form-1\" placeholder = \"Address\" ref = {address}/>\n\n    <input type = \"email\" class = \"text-form-1\" placeholder = \"Email Address\" ref = {email}/>\n    <input type = \"text\" max-length = \"11\" class = \"text-form-1\" placeholder = \"Contact number\" ref = {contact_number}/>\n\n    <select class = \"select-form-1\" ref = {venueName}>\n    <option value = \"0\">-- Select Venue --</option>\n    {\n      venueList.map(vList => {\n          return <option value = {vList.id}> {vList.description} </option>\n      })\n\n    }\n\n    </select>\n\n    <button onClick = {save_contact_tracing} class = \"btn-type-1\">Save</button>\n    <h4>Record Results</h4>\n    <CitizenRecords venueList = {venueList} populationList = {PopulationList}/>\n\n    </div>\n\n    </>\n  );\n\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}